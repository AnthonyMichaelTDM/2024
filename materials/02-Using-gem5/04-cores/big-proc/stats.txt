
---------- Begin Simulation Statistics ----------
simSeconds                                   0.028124                       # Number of seconds simulated (Second)
simTicks                                  28123597000                       # Number of ticks simulated (Tick)
finalTick                                 28123597000                       # Number of ticks from beginning of simulation (restored from checkpoints and never reset) (Tick)
simFreq                                  1000000000000                       # The number of ticks per simulated second ((Tick/Second))
hostSeconds                                    124.58                       # Real time elapsed on the host (Second)
hostTickRate                                225754441                       # The number of ticks simulated per host second (ticks/s) ((Tick/Second))
hostMemory                                    1297440                       # Number of bytes of host memory used (Byte)
simInsts                                     33954546                       # Number of instructions simulated (Count)
simOps                                       33954560                       # Number of ops (including micro ops) simulated (Count)
hostInstRate                                   272560                       # Simulator instruction rate (inst/s) ((Count/Second))
hostOpRate                                     272561                       # Simulator op (including micro ops) rate (op/s) ((Count/Second))
board.cache_hierarchy.dptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.dptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.dptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.dptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.dptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.dptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.dptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.dptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.dptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.dptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.dptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.dptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.iptw_caches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.iptw_caches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.iptw_caches.replacements            0                       # number of replacements (Count)
board.cache_hierarchy.iptw_caches.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.iptw_caches.tags.tagsInUse            0                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.iptw_caches.tags.totalRefs            0                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.sampledRefs            0                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.iptw_caches.tags.avgRefs          nan                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.iptw_caches.tags.warmupTick            0                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.iptw_caches.tags.tagAccesses            0                       # Number of tag accesses (Count)
board.cache_hierarchy.iptw_caches.tags.dataAccesses            0                       # Number of data accesses (Count)
board.cache_hierarchy.iptw_caches.tags.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.demandHits::processor.cores.core.data     13086944                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.demandHits::total     13086944                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::processor.cores.core.data     13086944                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.overallHits::total     13086944                       # number of overall hits (Count)
board.cache_hierarchy.l1dcaches.demandMisses::processor.cores.core.data       319668                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.demandMisses::total       319668                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::processor.cores.core.data       319668                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.overallMisses::total       319668                       # number of overall misses (Count)
board.cache_hierarchy.l1dcaches.demandMissLatency::processor.cores.core.data  15324844500                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMissLatency::total  15324844500                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::processor.cores.core.data  15324844500                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMissLatency::total  15324844500                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandAccesses::processor.cores.core.data     13406612                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandAccesses::total     13406612                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::processor.cores.core.data     13406612                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.overallAccesses::total     13406612                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1dcaches.demandMissRate::processor.cores.core.data     0.023844                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMissRate::total     0.023844                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::processor.cores.core.data     0.023844                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMissRate::total     0.023844                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::processor.cores.core.data 47939.876685                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMissLatency::total 47939.876685                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::processor.cores.core.data 47939.876685                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMissLatency::total 47939.876685                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.blockedCycles::no_mshrs            1                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1dcaches.blockedCauses::no_mshrs            1                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l1dcaches.avgBlocked::no_mshrs            1                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1dcaches.writebacks::writebacks        11558                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.writebacks::total        11558                       # number of writebacks (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::processor.cores.core.data        16776                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrHits::total        16776                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::processor.cores.core.data        16776                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.overallMshrHits::total        16776                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::processor.cores.core.data       302892                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMisses::total       302892                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::cache_hierarchy.l1dcaches.prefetcher      1106520                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::processor.cores.core.data       302892                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.overallMshrMisses::total      1409412                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::processor.cores.core.data  14598162000                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissLatency::total  14598162000                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher  57267382188                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::processor.cores.core.data  14598162000                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.overallMshrMissLatency::total  71865544188                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::processor.cores.core.data     0.022593                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandMshrMissRate::total     0.022593                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::cache_hierarchy.l1dcaches.prefetcher          inf                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::processor.cores.core.data     0.022593                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.overallMshrMissRate::total     0.105128                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::processor.cores.core.data 48195.931223                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.demandAvgMshrMissLatency::total 48195.931223                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 51754.493536                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::processor.cores.core.data 48195.931223                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.overallAvgMshrMissLatency::total 50989.734860                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.replacements      1409400                       # number of replacements (Count)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMisses::cache_hierarchy.l1dcaches.prefetcher      1106520                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMisses::total      1106520                       # number of HardPFReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissLatency::cache_hierarchy.l1dcaches.prefetcher  57267382188                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissLatency::total  57267382188                       # number of HardPFReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissRate::cache_hierarchy.l1dcaches.prefetcher          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.HardPFReq.mshrMissRate::total          inf                       # mshr miss rate for HardPFReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.HardPFReq.avgMshrMissLatency::cache_hierarchy.l1dcaches.prefetcher 51754.493536                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.HardPFReq.avgMshrMissLatency::total 51754.493536                       # average HardPFReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.hits::processor.cores.core.data            8                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.hits::total            8                       # number of LoadLockedReq hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.misses::processor.cores.core.data            9                       # number of LoadLockedReq misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.misses::total            9                       # number of LoadLockedReq misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missLatency::processor.cores.core.data       397500                       # number of LoadLockedReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missLatency::total       397500                       # number of LoadLockedReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.accesses::processor.cores.core.data           17                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.accesses::total           17                       # number of LoadLockedReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missRate::processor.cores.core.data     0.529412                       # miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.missRate::total     0.529412                       # miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMissLatency::processor.cores.core.data 44166.666667                       # average LoadLockedReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMissLatency::total 44166.666667                       # average LoadLockedReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrHits::processor.cores.core.data            7                       # number of LoadLockedReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrHits::total            7                       # number of LoadLockedReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMisses::processor.cores.core.data            2                       # number of LoadLockedReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMisses::total            2                       # number of LoadLockedReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissLatency::processor.cores.core.data        86000                       # number of LoadLockedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissLatency::total        86000                       # number of LoadLockedReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissRate::processor.cores.core.data     0.117647                       # mshr miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.mshrMissRate::total     0.117647                       # mshr miss rate for LoadLockedReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMshrMissLatency::processor.cores.core.data        43000                       # average LoadLockedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.LoadLockedReq.avgMshrMissLatency::total        43000                       # average LoadLockedReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.hits::processor.cores.core.data     11007738                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.hits::total     11007738                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::processor.cores.core.data       306657                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.misses::total       306657                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::processor.cores.core.data  15010749000                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.missLatency::total  15010749000                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::processor.cores.core.data     11314395                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.accesses::total     11314395                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::processor.cores.core.data     0.027103                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.missRate::total     0.027103                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::processor.cores.core.data 48949.637543                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMissLatency::total 48949.637543                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::processor.cores.core.data        14416                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrHits::total        14416                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::processor.cores.core.data       292241                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMisses::total       292241                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::processor.cores.core.data  14388030500                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissLatency::total  14388030500                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::processor.cores.core.data     0.025829                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.mshrMissRate::total     0.025829                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::processor.cores.core.data 49233.442604                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.ReadReq.avgMshrMissLatency::total 49233.442604                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.StoreCondReq.hits::processor.cores.core.data           14                       # number of StoreCondReq hits (Count)
board.cache_hierarchy.l1dcaches.StoreCondReq.hits::total           14                       # number of StoreCondReq hits (Count)
board.cache_hierarchy.l1dcaches.StoreCondReq.accesses::processor.cores.core.data           14                       # number of StoreCondReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.StoreCondReq.accesses::total           14                       # number of StoreCondReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.hits::processor.cores.core.data           23                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.hits::total           23                       # number of SwapReq hits (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::processor.cores.core.data            2                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.misses::total            2                       # number of SwapReq misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::processor.cores.core.data       119000                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.missLatency::total       119000                       # number of SwapReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::processor.cores.core.data           25                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.accesses::total           25                       # number of SwapReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::processor.cores.core.data     0.080000                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.missRate::total     0.080000                       # miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::processor.cores.core.data        59500                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMissLatency::total        59500                       # average SwapReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::processor.cores.core.data            2                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMisses::total            2                       # number of SwapReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::processor.cores.core.data       118000                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissLatency::total       118000                       # number of SwapReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::processor.cores.core.data     0.080000                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.mshrMissRate::total     0.080000                       # mshr miss rate for SwapReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::processor.cores.core.data        59000                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.SwapReq.avgMshrMissLatency::total        59000                       # average SwapReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.hits::processor.cores.core.data      2079206                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.hits::total      2079206                       # number of WriteReq hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::processor.cores.core.data        13011                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.misses::total        13011                       # number of WriteReq misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::processor.cores.core.data    314095500                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.missLatency::total    314095500                       # number of WriteReq miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::processor.cores.core.data      2092217                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.accesses::total      2092217                       # number of WriteReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::processor.cores.core.data     0.006219                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.missRate::total     0.006219                       # miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::processor.cores.core.data 24140.765506                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMissLatency::total 24140.765506                       # average WriteReq miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::processor.cores.core.data         2360                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrHits::total         2360                       # number of WriteReq MSHR hits (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::processor.cores.core.data        10651                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMisses::total        10651                       # number of WriteReq MSHR misses (Count)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::processor.cores.core.data    210131500                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissLatency::total    210131500                       # number of WriteReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::processor.cores.core.data     0.005091                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.mshrMissRate::total     0.005091                       # mshr miss rate for WriteReq accesses (Ratio)
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::processor.cores.core.data 19728.804807                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.WriteReq.avgMshrMissLatency::total 19728.804807                       # average WriteReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1dcaches.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.prefetcher.demandMshrMisses       302892                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfIssued      2931002                       # number of hwpf issued (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUnused       313803                       # number of HardPF blocks evicted w/o reference (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUseful       778628                       # number of useful prefetch (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l1dcaches.prefetcher.accuracy     0.265652                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l1dcaches.prefetcher.coverage     0.719939                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfHitInCache      1036762                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfHitInMSHR       787720                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfLate      1824482                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfIdentified      2932177                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfBufferHit          871                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfRemovedDemand           27                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfSpanPage      1403319                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l1dcaches.prefetcher.pfUsefulSpanPage       966747                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l1dcaches.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1dcaches.tags.tagsInUse    15.999733                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1dcaches.tags.totalRefs     14496405                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.sampledRefs      1409416                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1dcaches.tags.avgRefs    10.285398                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1dcaches.tags.warmupTick       134000                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1dcaches.tags.occupancies::cache_hierarchy.l1dcaches.prefetcher     9.973049                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1dcaches.tags.occupancies::processor.cores.core.data     6.026684                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::cache_hierarchy.l1dcaches.prefetcher     0.623316                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::processor.cores.core.data     0.376668                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.avgOccs::total     0.999983                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1dcaches.tags.occupanciesTaskId::1022            3                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1dcaches.tags.occupanciesTaskId::1024           13                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1022::0            3                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ageTaskId_1024::0           13                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1dcaches.tags.ratioOccsTaskId::1022     0.187500                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1dcaches.tags.ratioOccsTaskId::1024     0.812500                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1dcaches.tags.tagAccesses    108662760                       # Number of tag accesses (Count)
board.cache_hierarchy.l1dcaches.tags.dataAccesses    108662760                       # Number of data accesses (Count)
board.cache_hierarchy.l1dcaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.demandHits::processor.cores.core.inst      2126878                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.demandHits::total      2126878                       # number of demand (read+write) hits (Count)
board.cache_hierarchy.l1icaches.overallHits::processor.cores.core.inst      2126878                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.overallHits::total      2126878                       # number of overall hits (Count)
board.cache_hierarchy.l1icaches.demandMisses::processor.cores.core.inst         1043                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.demandMisses::total         1043                       # number of demand (read+write) misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::processor.cores.core.inst         1043                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.overallMisses::total         1043                       # number of overall misses (Count)
board.cache_hierarchy.l1icaches.demandMissLatency::processor.cores.core.inst     40212000                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMissLatency::total     40212000                       # number of demand (read+write) miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::processor.cores.core.inst     40212000                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMissLatency::total     40212000                       # number of overall miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandAccesses::processor.cores.core.inst      2127921                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandAccesses::total      2127921                       # number of demand (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::processor.cores.core.inst      2127921                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.overallAccesses::total      2127921                       # number of overall (read+write) accesses (Count)
board.cache_hierarchy.l1icaches.demandMissRate::processor.cores.core.inst     0.000490                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMissRate::total     0.000490                       # miss rate for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::processor.cores.core.inst     0.000490                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMissRate::total     0.000490                       # miss rate for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMissLatency::processor.cores.core.inst 38554.170662                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMissLatency::total 38554.170662                       # average overall miss latency in ticks ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::processor.cores.core.inst 38554.170662                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMissLatency::total 38554.170662                       # average overall miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.blockedCycles::no_mshrs            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCycles::no_targets            0                       # number of cycles access was blocked (Cycle)
board.cache_hierarchy.l1icaches.blockedCauses::no_mshrs            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.blockedCauses::no_targets            0                       # number of times access was blocked (Count)
board.cache_hierarchy.l1icaches.avgBlocked::no_mshrs          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.avgBlocked::no_targets          nan                       # average number of cycles each access was blocked ((Cycle/Count))
board.cache_hierarchy.l1icaches.writebacks::writebacks          799                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.writebacks::total          799                       # number of writebacks (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::processor.cores.core.inst          227                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrHits::total          227                       # number of demand (read+write) MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::processor.cores.core.inst          227                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.overallMshrHits::total          227                       # number of overall MSHR hits (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::processor.cores.core.inst          816                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMisses::total          816                       # number of demand (read+write) MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::processor.cores.core.inst          816                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.overallMshrMisses::total          816                       # number of overall MSHR misses (Count)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::processor.cores.core.inst     32668000                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissLatency::total     32668000                       # number of demand (read+write) MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::processor.cores.core.inst     32668000                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.overallMshrMissLatency::total     32668000                       # number of overall MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.demandMshrMissRate::processor.cores.core.inst     0.000383                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.demandMshrMissRate::total     0.000383                       # mshr miss ratio for demand accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::processor.cores.core.inst     0.000383                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.overallMshrMissRate::total     0.000383                       # mshr miss ratio for overall accesses (Ratio)
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::processor.cores.core.inst 40034.313725                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.demandAvgMshrMissLatency::total 40034.313725                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::processor.cores.core.inst 40034.313725                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.overallAvgMshrMissLatency::total 40034.313725                       # average overall mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.replacements          799                       # number of replacements (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::processor.cores.core.inst      2126878                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.hits::total      2126878                       # number of ReadReq hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::processor.cores.core.inst         1043                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.misses::total         1043                       # number of ReadReq misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::processor.cores.core.inst     40212000                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.missLatency::total     40212000                       # number of ReadReq miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.accesses::processor.cores.core.inst      2127921                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.accesses::total      2127921                       # number of ReadReq accesses(hits+misses) (Count)
board.cache_hierarchy.l1icaches.ReadReq.missRate::processor.cores.core.inst     0.000490                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.missRate::total     0.000490                       # miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::processor.cores.core.inst 38554.170662                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMissLatency::total 38554.170662                       # average ReadReq miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::processor.cores.core.inst          227                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrHits::total          227                       # number of ReadReq MSHR hits (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::processor.cores.core.inst          816                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMisses::total          816                       # number of ReadReq MSHR misses (Count)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::processor.cores.core.inst     32668000                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissLatency::total     32668000                       # number of ReadReq MSHR miss ticks (Tick)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::processor.cores.core.inst     0.000383                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.mshrMissRate::total     0.000383                       # mshr miss rate for ReadReq accesses (Ratio)
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::processor.cores.core.inst 40034.313725                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.ReadReq.avgMshrMissLatency::total 40034.313725                       # average ReadReq mshr miss latency ((Tick/Count))
board.cache_hierarchy.l1icaches.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.prefetcher.demandMshrMisses          816                       # demands not covered by prefetchs (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfIssued            0                       # number of hwpf issued (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfUseful            0                       # number of useful prefetch (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfUsefulButMiss            0                       # number of hit on prefetch but cache block is not in an usable state (Count)
board.cache_hierarchy.l1icaches.prefetcher.accuracy          nan                       # accuracy of the prefetcher (Count)
board.cache_hierarchy.l1icaches.prefetcher.coverage            0                       # coverage brought by this prefetcher (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfHitInCache            0                       # number of prefetches hitting in cache (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfHitInMSHR            0                       # number of prefetches hitting in a MSHR (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfHitInWB            0                       # number of prefetches hit in the Write Buffer (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfLate            0                       # number of late prefetches (hitting in cache, MSHR or WB) (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfIdentified            0                       # number of prefetch candidates identified (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfBufferHit            0                       # number of redundant prefetches already in prefetch queue (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfInCache            0                       # number of redundant prefetches already in cache/mshr dropped (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfRemovedDemand            0                       # number of prefetches dropped due to a demand for the same address (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfRemovedFull            0                       # number of prefetches dropped due to prefetch queue size (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfSpanPage            0                       # number of prefetches that crossed the page (Count)
board.cache_hierarchy.l1icaches.prefetcher.pfUsefulSpanPage            0                       # number of prefetches that is useful and crossed the page (Count)
board.cache_hierarchy.l1icaches.prefetcher.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.l1icaches.tags.tagsInUse    15.999763                       # Average ticks per tags in use ((Tick/Count))
board.cache_hierarchy.l1icaches.tags.totalRefs      2127693                       # Total number of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.sampledRefs          815                       # Sample count of references to valid blocks. (Count)
board.cache_hierarchy.l1icaches.tags.avgRefs  2610.666258                       # Average number of references to valid blocks. ((Count/Count))
board.cache_hierarchy.l1icaches.tags.warmupTick        71000                       # The tick when the warmup percentage was hit. (Tick)
board.cache_hierarchy.l1icaches.tags.occupancies::processor.cores.core.inst    15.999763                       # Average occupied blocks per tick, per requestor ((Count/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::processor.cores.core.inst     0.999985                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.avgOccs::total     0.999985                       # Average percentage of cache occupancy ((Ratio/Tick))
board.cache_hierarchy.l1icaches.tags.occupanciesTaskId::1024           16                       # Occupied blocks per task id (Count)
board.cache_hierarchy.l1icaches.tags.ageTaskId_1024::0           16                       # Occupied blocks per task id, per block age (Count)
board.cache_hierarchy.l1icaches.tags.ratioOccsTaskId::1024            1                       # Ratio of occupied blocks and all blocks, per task id (Ratio)
board.cache_hierarchy.l1icaches.tags.tagAccesses     17024183                       # Number of tag accesses (Count)
board.cache_hierarchy.l1icaches.tags.dataAccesses     17024183                       # Number of data accesses (Count)
board.cache_hierarchy.l1icaches.tags.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.transDist::ReadResp      1399578                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackDirty        11558                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::WritebackClean          799                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::CleanEvict      1397842                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExReq        10652                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadExResp        10652                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::ReadSharedReq      1399579                       # Transaction distribution (Count)
board.cache_hierarchy.membus.transDist::InvalidateReq            1                       # Transaction distribution (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l1icaches.mem_side_port::board.memory.mem_ctrl0.port         1211                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l1icaches.mem_side_port::board.memory.mem_ctrl1.port         1219                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l1icaches.mem_side_port::total         2430                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l1dcaches.mem_side_port::board.memory.mem_ctrl0.port      2120226                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l1dcaches.mem_side_port::board.memory.mem_ctrl1.port      2108005                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount_board.cache_hierarchy.l1dcaches.mem_side_port::total      4228231                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktCount::total      4230661                       # Packet count per connected requestor and responder (Count)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l1icaches.mem_side_port::board.memory.mem_ctrl0.port        51456                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l1icaches.mem_side_port::board.memory.mem_ctrl1.port        51840                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l1icaches.mem_side_port::total       103296                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l1dcaches.mem_side_port::board.memory.mem_ctrl0.port     45601152                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l1dcaches.mem_side_port::board.memory.mem_ctrl1.port     45341120                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize_board.cache_hierarchy.l1dcaches.mem_side_port::total     90942272                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.pktSize::total     91045568                       # Cumulative packet size per connected requestor and responder (Byte)
board.cache_hierarchy.membus.snoops                 0                       # Total snoops (Count)
board.cache_hierarchy.membus.snoopTraffic            0                       # Total snoop traffic (Byte)
board.cache_hierarchy.membus.snoopFanout::samples      1410232                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::mean            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::stdev            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::underflows            0      0.00%      0.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::0      1410232    100.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::1            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::2            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::3            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::4            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::overflows            0      0.00%    100.00% # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::min_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::max_value            0                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.snoopFanout::total      1410232                       # Request fanout histogram (Count)
board.cache_hierarchy.membus.badaddr_responder.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.cache_hierarchy.membus.reqLayer0.occupancy    878736527                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer0.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.reqLayer1.occupancy    878373515                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.reqLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer1.occupancy       859811                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer1.utilization          0.0                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.respLayer2.occupancy   1473119366                       # Layer occupancy (ticks) (Tick)
board.cache_hierarchy.membus.respLayer2.utilization          0.1                       # Layer utilization (Ratio)
board.cache_hierarchy.membus.snoop_filter.totRequests      2820431                       # Total number of requests made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleRequests      1410199                       # Number of requests hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiRequests            0                       # Number of requests hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.totSnoops            0                       # Total number of snoops made to the snoop filter. (Count)
board.cache_hierarchy.membus.snoop_filter.hitSingleSnoops            0                       # Number of snoops hitting in the snoop filter with a single holder of the requested data. (Count)
board.cache_hierarchy.membus.snoop_filter.hitMultiSnoops            0                       # Number of snoops hitting in the snoop filter with multiple (>1) holders of the requested data. (Count)
board.clk_domain.clock                            500                       # Clock period in ticks (Tick)
board.clk_domain.voltage_domain.voltage             1                       # Voltage in Volts (Volt)
board.memory.mem_ctrl0.avgPriority_writebacks::samples      1340.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl0.avgPriority_cache_hierarchy.l1dcaches.prefetcher::samples    546564.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl0.avgPriority_processor.cores.core.inst::samples       270.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl0.avgPriority_processor.cores.core.data::samples    154639.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl0.priorityMinLatency 0.000000017492                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl0.priorityMaxLatency 0.021276865316                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl0.numReadWriteTurnArounds           73                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl0.numWriteReadTurnArounds           73                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl0.numStayReadState       1408609                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl0.numStayWriteState         1212                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl0.readReqs                707151                       # Number of read requests accepted (Count)
board.memory.mem_ctrl0.writeReqs                 6172                       # Number of write requests accepted (Count)
board.memory.mem_ctrl0.readBursts              707151                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl0.writeBursts               6172                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl0.servicedByWrQ             5678                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl0.mergedWrBursts            4832                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl0.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl0.avgRdQLen                 1.94                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl0.avgWrQLen                56.79                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl0.numRdRetry                   0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl0.numWrRetry                   0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl0.readPktSize::0               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::1               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::2               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::3               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::4               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::5               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.readPktSize::6          707151                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::0              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::1              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::2              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::3              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::4              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::5              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.writePktSize::6           6172                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl0.rdQLenPdf::0            378469                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::1            184744                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::2             99817                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::3             26667                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::4              9091                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::5              2626                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::6                59                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::7                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::8                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::9                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::10                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::11                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::12                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::13                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::14                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::15                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::16                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::17                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::18                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::19                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::20                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::21                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::22                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::23                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::24                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::25                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::26                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::27                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::28                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::29                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::30                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::31                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::32                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::33                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::34                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::35                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::36                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::37                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::38                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::39                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::40                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::41                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::42                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::43                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::44                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::45                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::46                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::47                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::48                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::49                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::50                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::51                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::52                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::53                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::54                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::55                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::56                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::57                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::58                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::59                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::60                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::61                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::62                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdQLenPdf::63                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::0                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::1                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::2                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::3                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::4                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::5                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::6                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::7                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::8                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::9                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::10                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::11                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::12                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::13                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::14                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::15                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::16                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::17                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::18                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::19                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::20                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::21                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::22                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::23                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::24                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::25                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::26                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::27                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::28                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::29                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::30                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::31                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::32                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::33                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::34                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::35                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::36                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::37                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::38                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::39                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::40                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::41                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::42                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::43                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::44                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::45                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::46                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::47               53                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::48               55                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::49               71                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::50               74                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::51               75                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::52               74                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::53               75                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::54               77                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::55               75                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::56               75                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::57               76                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::58               75                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::59               73                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::60               73                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::61               73                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::62               73                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::63               73                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::64               73                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::65                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::66                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::67                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::68                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::69                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::70                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::71                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::72                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::73                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::74                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::75                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::76                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::77                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::78                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::79                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::80                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::81                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::82                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::83                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::84                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::85                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::86                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::87                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::88                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::89                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::90                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::91                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::92                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::93                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::94                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::95                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::96                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::97                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::98                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::99                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::100               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::101               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::102               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::103               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::104               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::105               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::106               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::107               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::108               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::109               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::110               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::111               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::112               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::113               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::114               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::115               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::116               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::117               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::118               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::119               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::120               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::121               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::122               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::123               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::124               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::125               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::126               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.wrQLenPdf::127               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl0.rdPerTurnAround::samples           73                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl0.rdPerTurnAround::mean  9609.095890                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl0.rdPerTurnAround::gmean   169.331670                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl0.rdPerTurnAround::stdev 16363.120226                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl0.rdPerTurnAround::0-1023           53     72.60%     72.60% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl0.rdPerTurnAround::1024-2047            1      1.37%     73.97% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl0.rdPerTurnAround::20480-21503            1      1.37%     75.34% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl0.rdPerTurnAround::34816-35839            6      8.22%     83.56% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl0.rdPerTurnAround::35840-36863            4      5.48%     89.04% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl0.rdPerTurnAround::36864-37887            1      1.37%     90.41% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl0.rdPerTurnAround::37888-38911            1      1.37%     91.78% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl0.rdPerTurnAround::38912-39935            2      2.74%     94.52% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl0.rdPerTurnAround::39936-40959            1      1.37%     95.89% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl0.rdPerTurnAround::40960-41983            3      4.11%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl0.rdPerTurnAround::total           73                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl0.wrPerTurnAround::samples           73                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl0.wrPerTurnAround::mean    17.602740                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl0.wrPerTurnAround::gmean    17.571906                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl0.wrPerTurnAround::stdev     1.037354                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl0.wrPerTurnAround::16           19     26.03%     26.03% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl0.wrPerTurnAround::17            1      1.37%     27.40% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl0.wrPerTurnAround::18           44     60.27%     87.67% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl0.wrPerTurnAround::19            8     10.96%     98.63% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl0.wrPerTurnAround::20            1      1.37%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl0.wrPerTurnAround::total           73                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl0.bytesReadWrQ            363392                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl0.bytesReadSys          45257664                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl0.bytesWrittenSys         395008                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl0.avgRdBWSys        1609241662.79299188                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl0.avgWrBWSys        14045429.53733834                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl0.totGap             28123586500                       # Total gap between requests (Tick)
board.memory.mem_ctrl0.avgGap                39426.16                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl0.requestorReadBytes::cache_hierarchy.l1dcaches.prefetcher     34980096                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl0.requestorReadBytes::processor.cores.core.inst        17280                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl0.requestorReadBytes::processor.cores.core.data      9896896                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl0.requestorWriteBytes::writebacks        82240                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl0.requestorReadRate::cache_hierarchy.l1dcaches.prefetcher 1243798792.878450155258                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl0.requestorReadRate::processor.cores.core.inst 614430.650531651452                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl0.requestorReadRate::processor.cores.core.data 351907190.250237166882                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl0.requestorWriteRate::writebacks 2924234.762715451885                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl0.requestorReadAccesses::cache_hierarchy.l1dcaches.prefetcher       547157                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl0.requestorReadAccesses::processor.cores.core.inst          407                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl0.requestorReadAccesses::processor.cores.core.data       159587                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl0.requestorWriteAccesses::writebacks         6172                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl0.requestorReadTotalLat::cache_hierarchy.l1dcaches.prefetcher  14249455745                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl0.requestorReadTotalLat::processor.cores.core.inst      8210185                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl0.requestorReadTotalLat::processor.cores.core.data   3678745812                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl0.requestorWriteTotalLat::writebacks 1517711389617                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl0.requestorReadAvgLat::cache_hierarchy.l1dcaches.prefetcher     26042.72                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl0.requestorReadAvgLat::processor.cores.core.inst     20172.44                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl0.requestorReadAvgLat::processor.cores.core.data     23051.66                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl0.requestorWriteAvgLat::writebacks 245902687.88                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl0.dram.bytesRead::cache_hierarchy.l1dcaches.prefetcher     35018048                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesRead::processor.cores.core.inst        26048                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesRead::processor.cores.core.data     10213568                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesRead::total     45257664                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesInstRead::processor.cores.core.inst        26048                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesInstRead::total        26048                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl0.dram.bytesWritten::writebacks       369536                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl0.dram.bytesWritten::total       369536                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl0.dram.numReads::cache_hierarchy.l1dcaches.prefetcher       547157                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl0.dram.numReads::processor.cores.core.inst          407                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl0.dram.numReads::processor.cores.core.data       159587                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl0.dram.numReads::total       707151                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl0.dram.numWrites::writebacks         5774                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl0.dram.numWrites::total         5774                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl0.dram.bwRead::cache_hierarchy.l1dcaches.prefetcher   1245148265                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwRead::processor.cores.core.inst       926197                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwRead::processor.cores.core.data    363167201                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwRead::total   1609241663                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwInstRead::processor.cores.core.inst       926197                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwInstRead::total       926197                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwWrite::writebacks     13139713                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwWrite::total     13139713                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwTotal::writebacks     13139713                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwTotal::cache_hierarchy.l1dcaches.prefetcher   1245148265                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwTotal::processor.cores.core.inst       926197                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwTotal::processor.cores.core.data    363167201                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.bwTotal::total   1622381376                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl0.dram.readBursts         701473                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl0.dram.writeBursts          1285                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::0       147639                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::1         7983                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::2         8031                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::3         1185                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::4           42                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::5           43                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::6           30                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::9            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::11            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::12            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::13            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::14            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::16           18                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::17            8                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::18            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::19            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::20            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::21            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::22            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::23            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::24            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::25          117                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::26            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::27        39145                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::28        51200                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::29        68032                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::30       171748                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankRdBursts::31       206219                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::0          162                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::1          132                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::2          159                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::3           58                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::4           49                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::5           40                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::6           30                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::8            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::9            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::11            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::12            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::13            5                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::14            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::16            3                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::17            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::18            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::19            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::20            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::21            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::22            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::23            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::24            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::25           34                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::26            4                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::27          101                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::28          102                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::29          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::30          129                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.perBankWrBursts::31          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl0.dram.totQLat        5666246026                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl0.dram.totBusLat      2337308036                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl0.dram.totMemAccLat  17936411742                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl0.dram.avgQLat           8077.64                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl0.dram.avgBusLat         3332.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl0.dram.avgMemAccLat     25569.64                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl0.dram.readRowHits        647541                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl0.dram.writeRowHits         1211                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl0.dram.readRowHitRate        92.31                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl0.dram.writeRowHitRate        94.24                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl0.dram.bytesPerActivate::samples        54001                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::mean   832.858058                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::gmean   727.956300                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::stdev   307.155342                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::0-127          765      1.42%      1.42% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::128-255         4312      7.99%      9.40% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::256-383         1991      3.69%     13.09% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::384-511         3617      6.70%     19.79% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::512-639         1315      2.44%     22.22% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::640-767         1913      3.54%     25.76% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::768-895         3115      5.77%     31.53% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::896-1023         1894      3.51%     35.04% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::1024-1151        35079     64.96%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.bytesPerActivate::total        54001                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl0.dram.dramBytesRead     44894272                       # Total bytes read (Byte)
board.memory.mem_ctrl0.dram.dramBytesWritten        82240                       # Total bytes written (Byte)
board.memory.mem_ctrl0.dram.avgRdBW       1596.320414                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl0.dram.avgWrBW          2.924235                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl0.dram.peakBW           19207.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl0.dram.busUtil              8.33                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl0.dram.busUtilRead          8.31                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl0.dram.busUtilWrite         0.02                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl0.dram.pageHitRate         92.32                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl0.dram.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl0.dram.rank0.actEnergy 21598916.976001                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.preEnergy 38122137.043202                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.readEnergy 452521295.049591                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.writeEnergy 1547540.736000                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.refreshEnergy 2441190245.155080                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.actBackEnergy 11586492100.579161                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.preBackEnergy 1180745720.716806                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.totalEnergy 15722217956.256037                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank0.averagePower   559.040081                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl0.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::IDLE   3499336896                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::REF   1264200000                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::ACT  23360060104                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.actEnergy 62616743.280000                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.preEnergy 110537129.455202                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.readEnergy 1471550680.185600                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.writeEnergy 1483846.224000                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.refreshEnergy 2441190245.155080                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.actBackEnergy 13123565253.287924                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.preBackEnergy 119619077.222401                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.totalEnergy 17330562974.810452                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl0.dram.rank1.averagePower   616.228535                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl0.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::IDLE    265438909                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::REF   1264200000                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::ACT  26593958091                       # Time in different power states (Tick)
board.memory.mem_ctrl0.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl0.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl1.avgPriority_writebacks::samples      1342.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl1.avgPriority_cache_hierarchy.l1dcaches.prefetcher::samples    552989.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl1.avgPriority_processor.cores.core.inst::samples       272.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl1.avgPriority_processor.cores.core.data::samples    138361.00                       # Average QoS priority value for accepted requests (Count)
board.memory.mem_ctrl1.priorityMinLatency 0.000000017492                       # per QoS priority minimum request to response latency (Second)
board.memory.mem_ctrl1.priorityMaxLatency 0.019581595652                       # per QoS priority maximum request to response latency (Second)
board.memory.mem_ctrl1.numReadWriteTurnArounds           72                       # Number of turnarounds from READ to WRITE (Count)
board.memory.mem_ctrl1.numWriteReadTurnArounds           72                       # Number of turnarounds from WRITE to READ (Count)
board.memory.mem_ctrl1.numStayReadState       1387966                       # Number of times bus staying in READ state (Count)
board.memory.mem_ctrl1.numStayWriteState         1211                       # Number of times bus staying in WRITE state (Count)
board.memory.mem_ctrl1.readReqs                703080                       # Number of read requests accepted (Count)
board.memory.mem_ctrl1.writeReqs                 6185                       # Number of write requests accepted (Count)
board.memory.mem_ctrl1.readBursts              703080                       # Number of controller read bursts, including those serviced by the write queue (Count)
board.memory.mem_ctrl1.writeBursts               6185                       # Number of controller write bursts, including those merged in the write queue (Count)
board.memory.mem_ctrl1.servicedByWrQ            11458                       # Number of controller read bursts serviced by the write queue (Count)
board.memory.mem_ctrl1.mergedWrBursts            4843                       # Number of controller write bursts merged with an existing one (Count)
board.memory.mem_ctrl1.neitherReadNorWriteReqs            0                       # Number of requests that are neither read nor write (Count)
board.memory.mem_ctrl1.avgRdQLen                 2.00                       # Average read queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl1.avgWrQLen                57.14                       # Average write queue length when enqueuing ((Count/Tick))
board.memory.mem_ctrl1.numRdRetry                   0                       # Number of times read queue was full causing retry (Count)
board.memory.mem_ctrl1.numWrRetry                   0                       # Number of times write queue was full causing retry (Count)
board.memory.mem_ctrl1.readPktSize::0               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::1               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::2               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::3               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::4               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::5               0                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.readPktSize::6          703080                       # Read request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::0              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::1              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::2              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::3              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::4              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::5              0                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.writePktSize::6           6185                       # Write request sizes (log2) (Count)
board.memory.mem_ctrl1.rdQLenPdf::0            361239                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::1            186616                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::2            105094                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::3             27064                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::4              9013                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::5              2568                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::6                28                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::7                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::8                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::9                 0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::10                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::11                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::12                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::13                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::14                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::15                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::16                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::17                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::18                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::19                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::20                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::21                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::22                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::23                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::24                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::25                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::26                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::27                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::28                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::29                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::30                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::31                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::32                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::33                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::34                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::35                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::36                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::37                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::38                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::39                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::40                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::41                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::42                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::43                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::44                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::45                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::46                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::47                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::48                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::49                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::50                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::51                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::52                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::53                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::54                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::55                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::56                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::57                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::58                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::59                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::60                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::61                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::62                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdQLenPdf::63                0                       # What read queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::0                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::1                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::2                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::3                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::4                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::5                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::6                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::7                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::8                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::9                 1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::10                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::11                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::12                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::13                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::14                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::15                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::16                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::17                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::18                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::19                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::20                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::21                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::22                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::23                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::24                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::25                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::26                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::27                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::28                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::29                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::30                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::31                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::32                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::33                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::34                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::35                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::36                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::37                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::38                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::39                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::40                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::41                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::42                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::43                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::44                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::45                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::46                1                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::47               52                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::48               53                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::49               71                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::50               71                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::51               78                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::52               78                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::53               78                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::54               74                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::55               80                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::56               75                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::57               74                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::58               76                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::59               75                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::60               72                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::61               72                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::62               72                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::63               72                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::64               72                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::65                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::66                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::67                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::68                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::69                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::70                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::71                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::72                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::73                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::74                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::75                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::76                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::77                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::78                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::79                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::80                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::81                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::82                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::83                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::84                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::85                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::86                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::87                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::88                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::89                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::90                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::91                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::92                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::93                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::94                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::95                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::96                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::97                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::98                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::99                0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::100               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::101               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::102               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::103               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::104               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::105               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::106               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::107               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::108               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::109               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::110               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::111               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::112               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::113               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::114               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::115               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::116               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::117               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::118               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::119               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::120               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::121               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::122               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::123               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::124               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::125               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::126               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.wrQLenPdf::127               0                       # What write queue length does an incoming req see (Count)
board.memory.mem_ctrl1.rdPerTurnAround::samples           72                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl1.rdPerTurnAround::mean  9605.527778                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl1.rdPerTurnAround::gmean   174.454932                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl1.rdPerTurnAround::stdev 16121.641774                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl1.rdPerTurnAround::0-1023           53     73.61%     73.61% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl1.rdPerTurnAround::32768-33791            1      1.39%     75.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl1.rdPerTurnAround::33792-34815            3      4.17%     79.17% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl1.rdPerTurnAround::34816-35839            7      9.72%     88.89% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl1.rdPerTurnAround::35840-36863            3      4.17%     93.06% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl1.rdPerTurnAround::36864-37887            1      1.39%     94.44% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl1.rdPerTurnAround::38912-39935            2      2.78%     97.22% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl1.rdPerTurnAround::39936-40959            2      2.78%    100.00% # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl1.rdPerTurnAround::total           72                       # Reads before turning the bus around for writes (Count)
board.memory.mem_ctrl1.wrPerTurnAround::samples           72                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl1.wrPerTurnAround::mean    17.819444                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl1.wrPerTurnAround::gmean    17.765966                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl1.wrPerTurnAround::stdev     1.397446                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl1.wrPerTurnAround::16           20     27.78%     27.78% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl1.wrPerTurnAround::17            1      1.39%     29.17% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl1.wrPerTurnAround::18           36     50.00%     79.17% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl1.wrPerTurnAround::19            4      5.56%     84.72% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl1.wrPerTurnAround::20           10     13.89%     98.61% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl1.wrPerTurnAround::22            1      1.39%    100.00% # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl1.wrPerTurnAround::total           72                       # Writes before turning the bus around for reads (Count)
board.memory.mem_ctrl1.bytesReadWrQ            733312                       # Total number of bytes read from write queue (Byte)
board.memory.mem_ctrl1.bytesReadSys          44997120                       # Total read bytes from the system interface side (Byte)
board.memory.mem_ctrl1.bytesWrittenSys         395840                       # Total written bytes from the system interface side (Byte)
board.memory.mem_ctrl1.avgRdBWSys        1599977413.98442030                       # Average system read bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl1.avgWrBWSys        14075013.23532690                       # Average system write bandwidth in Byte/s ((Byte/Second))
board.memory.mem_ctrl1.totGap             28123463500                       # Total gap between requests (Tick)
board.memory.mem_ctrl1.avgGap                39651.56                       # Average gap between requests ((Tick/Count))
board.memory.mem_ctrl1.requestorReadBytes::cache_hierarchy.l1dcaches.prefetcher     35391296                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl1.requestorReadBytes::processor.cores.core.inst        17408                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl1.requestorReadBytes::processor.cores.core.data      8855104                       # Per-requestor bytes read from memory (Byte)
board.memory.mem_ctrl1.requestorWriteBytes::writebacks        82112                       # Per-requestor bytes write to memory (Byte)
board.memory.mem_ctrl1.requestorReadRate::cache_hierarchy.l1dcaches.prefetcher 1258419966.692027330399                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl1.requestorReadRate::processor.cores.core.inst 618981.988683737698                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl1.requestorReadRate::processor.cores.core.data 314863849.030406713486                       # Per-requestor bytes read from memory rate ((Byte/Second))
board.memory.mem_ctrl1.requestorWriteRate::writebacks 2919683.424563365988                       # Per-requestor bytes write to memory rate ((Byte/Second))
board.memory.mem_ctrl1.requestorReadAccesses::cache_hierarchy.l1dcaches.prefetcher       559363                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl1.requestorReadAccesses::processor.cores.core.inst          409                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl1.requestorReadAccesses::processor.cores.core.data       143308                       # Per-requestor read serviced memory accesses (Count)
board.memory.mem_ctrl1.requestorWriteAccesses::writebacks         6185                       # Per-requestor write serviced memory accesses (Count)
board.memory.mem_ctrl1.requestorReadTotalLat::cache_hierarchy.l1dcaches.prefetcher  14602509926                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl1.requestorReadTotalLat::processor.cores.core.inst      6316651                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl1.requestorReadTotalLat::processor.cores.core.data   3274354329                       # Per-requestor read total memory access latency (Tick)
board.memory.mem_ctrl1.requestorWriteTotalLat::writebacks 1488512991762                       # Per-requestor write total memory access latency (Tick)
board.memory.mem_ctrl1.requestorReadAvgLat::cache_hierarchy.l1dcaches.prefetcher     26105.61                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl1.requestorReadAvgLat::processor.cores.core.inst     15444.13                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl1.requestorReadAvgLat::processor.cores.core.data     22848.37                       # Per-requestor read average memory access latency ((Tick/Count))
board.memory.mem_ctrl1.requestorWriteAvgLat::writebacks 240664994.63                       # Per-requestor write average memory access latency ((Tick/Count))
board.memory.mem_ctrl1.dram.bytesRead::cache_hierarchy.l1dcaches.prefetcher     35799232                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesRead::processor.cores.core.inst        26176                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesRead::processor.cores.core.data      9171712                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesRead::total     44997120                       # Number of bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesInstRead::processor.cores.core.inst        26176                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesInstRead::total        26176                       # Number of instructions bytes read from this memory (Byte)
board.memory.mem_ctrl1.dram.bytesWritten::writebacks       370176                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl1.dram.bytesWritten::total       370176                       # Number of bytes written to this memory (Byte)
board.memory.mem_ctrl1.dram.numReads::cache_hierarchy.l1dcaches.prefetcher       559363                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl1.dram.numReads::processor.cores.core.inst          409                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl1.dram.numReads::processor.cores.core.data       143308                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl1.dram.numReads::total       703080                       # Number of read requests responded to by this memory (Count)
board.memory.mem_ctrl1.dram.numWrites::writebacks         5784                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl1.dram.numWrites::total         5784                       # Number of write requests responded to by this memory (Count)
board.memory.mem_ctrl1.dram.bwRead::cache_hierarchy.l1dcaches.prefetcher   1272925081                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwRead::processor.cores.core.inst       930749                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwRead::processor.cores.core.data    326121584                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwRead::total   1599977414                       # Total read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwInstRead::processor.cores.core.inst       930749                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwInstRead::total       930749                       # Instruction read bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwWrite::writebacks     13162470                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwWrite::total     13162470                       # Write bandwidth from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwTotal::writebacks     13162470                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwTotal::cache_hierarchy.l1dcaches.prefetcher   1272925081                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwTotal::processor.cores.core.inst       930749                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwTotal::processor.cores.core.data    326121584                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.bwTotal::total   1613139884                       # Total bandwidth to/from this memory ((Byte/Second))
board.memory.mem_ctrl1.dram.readBursts         691622                       # Number of DRAM read bursts (Count)
board.memory.mem_ctrl1.dram.writeBursts          1283                       # Number of DRAM write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::0       149020                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::1         8253                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::2         8272                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::3         1246                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::4           51                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::5           44                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::6           29                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::8            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::9            4                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::11            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::12           10                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::13            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::14            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::16           23                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::17           15                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::18            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::19            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::20            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::21            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::22            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::23            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::24           15                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::25          190                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::26            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::27        29800                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::28        52302                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::29        69437                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::30       166048                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankRdBursts::31       206838                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::0          161                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::1          131                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::2          156                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::3           50                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::4           56                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::5           50                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::6           29                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::7            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::8            2                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::9            4                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::10            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::11            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::12           10                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::13            6                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::14            7                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::15            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::16            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::17            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::18            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::19            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::20            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::21            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::22            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::23            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::24            1                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::25           34                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::26            0                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::27           97                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::28           98                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::29          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::30          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.perBankWrBursts::31          128                       # Per bank write bursts (Count)
board.memory.mem_ctrl1.dram.totQLat        5785328882                       # Total ticks spent queuing (Tick)
board.memory.mem_ctrl1.dram.totBusLat      2304484504                       # Total ticks spent in databus transfers (Tick)
board.memory.mem_ctrl1.dram.totMemAccLat  17883180906                       # Total ticks spent from burst creation until serviced by the DRAM (Tick)
board.memory.mem_ctrl1.dram.avgQLat           8364.87                       # Average queueing delay per DRAM burst ((Tick/Count))
board.memory.mem_ctrl1.dram.avgBusLat         3332.00                       # Average bus latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl1.dram.avgMemAccLat     25856.87                       # Average memory access latency per DRAM burst ((Tick/Count))
board.memory.mem_ctrl1.dram.readRowHits        640518                       # Number of row buffer hits during reads (Count)
board.memory.mem_ctrl1.dram.writeRowHits         1206                       # Number of row buffer hits during writes (Count)
board.memory.mem_ctrl1.dram.readRowHitRate        92.61                       # Row buffer hit rate for reads (Ratio)
board.memory.mem_ctrl1.dram.writeRowHitRate        94.00                       # Row buffer hit rate for writes (Ratio)
board.memory.mem_ctrl1.dram.bytesPerActivate::samples        51177                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::mean   866.502999                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::gmean   782.629475                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::stdev   275.697129                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::0-127          808      1.58%      1.58% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::128-255         1531      2.99%      4.57% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::256-383         1996      3.90%      8.47% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::384-511         3771      7.37%     15.84% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::512-639         1151      2.25%     18.09% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::640-767         1960      3.83%     21.92% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::768-895         3171      6.20%     28.11% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::896-1023         1829      3.57%     31.69% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::1024-1151        34960     68.31%    100.00% # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.bytesPerActivate::total        51177                       # Bytes accessed per row activation (Byte)
board.memory.mem_ctrl1.dram.dramBytesRead     44263808                       # Total bytes read (Byte)
board.memory.mem_ctrl1.dram.dramBytesWritten        82112                       # Total bytes written (Byte)
board.memory.mem_ctrl1.dram.avgRdBW       1573.902798                       # Average DRAM read bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl1.dram.avgWrBW          2.919683                       # Average DRAM write bandwidth in MiBytes/s ((Byte/Second))
board.memory.mem_ctrl1.dram.peakBW           19207.00                       # Theoretical peak bandwidth in MiByte/s ((Byte/Second))
board.memory.mem_ctrl1.dram.busUtil              8.21                       # Data bus utilization in percentage (Ratio)
board.memory.mem_ctrl1.dram.busUtilRead          8.19                       # Data bus utilization in percentage for reads (Ratio)
board.memory.mem_ctrl1.dram.busUtilWrite         0.02                       # Data bus utilization in percentage for writes (Ratio)
board.memory.mem_ctrl1.dram.pageHitRate         92.61                       # Row buffer hit rate, read and write combined (Ratio)
board.memory.mem_ctrl1.dram.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.memory.mem_ctrl1.dram.rank0.actEnergy 21882723.408001                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.preEnergy 38625917.450402                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.readEnergy 457927555.679994                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.writeEnergy 1575849.408000                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.refreshEnergy 2441190245.155080                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.actBackEnergy 11650407995.990389                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.preBackEnergy 1136621041.651207                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.totalEnergy 15748231328.743238                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank0.averagePower   559.965047                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl1.dram.rank0.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::IDLE   3366513788                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::REF   1264200000                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::ACT  23492883212                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank0.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.actEnergy 57927699.647999                       # Energy for activate commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.preEnergy 102259163.966400                       # Energy for precharge commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.readEnergy 1439124088.012805                       # Energy for read commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.writeEnergy 1450819.440000                       # Energy for write commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.refreshEnergy 2441190245.155080                       # Energy for refresh commands per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.actBackEnergy 13106873424.691114                       # Energy for active background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.preBackEnergy 131142370.060802                       # Energy for precharge background per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.actPowerDownEnergy            0                       # Energy for active power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.prePowerDownEnergy            0                       # Energy for precharge power-down per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.selfRefreshEnergy            0                       # Energy for self refresh per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.totalEnergy 17279967810.974350                       # Total energy per rank (pJ) (Joule)
board.memory.mem_ctrl1.dram.rank1.averagePower   614.429506                       # Core power per rank (mW) (Watt)
board.memory.mem_ctrl1.dram.rank1.totalIdleTime            0                       # Total Idle time Per DRAM Rank (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::IDLE    296982649                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::REF   1264200000                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::SREF            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::PRE_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::ACT  26562414351                       # Time in different power states (Tick)
board.memory.mem_ctrl1.dram.rank1.pwrStateTime::ACT_PDN            0                       # Time in different power states (Tick)
board.memory.mem_ctrl1.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.numCycles         56247195                       # Number of cpu cycles simulated (Cycle)
board.processor.cores.core.cpi               1.656544                       # CPI: cycles per instruction (core level) ((Cycle/Count))
board.processor.cores.core.ipc               0.603666                       # IPC: instructions per cycle (core level) ((Count/Cycle))
board.processor.cores.core.numWorkItemsStarted            0                       # Number of work items this cpu started (Count)
board.processor.cores.core.numWorkItemsCompleted            0                       # Number of work items this cpu completed (Count)
board.processor.cores.core.instsAdded        34083303                       # Number of instructions added to the IQ (excludes non-spec) (Count)
board.processor.cores.core.nonSpecInstsAdded          124                       # Number of non-speculative instructions added to the IQ (Count)
board.processor.cores.core.instsIssued       34081910                       # Number of instructions issued (Count)
board.processor.cores.core.squashedInstsIssued           27                       # Number of squashed instructions issued (Count)
board.processor.cores.core.squashedInstsExamined       128866                       # Number of squashed instructions iterated over during squash; mainly for profiling (Count)
board.processor.cores.core.squashedOperandsExamined        23369                       # Number of squashed operands that are examined and possibly removed from graph (Count)
board.processor.cores.core.squashedNonSpecRemoved           41                       # Number of squashed non-spec instructions that were removed (Count)
board.processor.cores.core.numIssuedDist::samples     56218660                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::mean     0.606238                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::stdev     0.837218                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::underflows            0      0.00%      0.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::0     33157768     58.98%     58.98% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::1     13829515     24.60%     83.58% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::2      7588653     13.50%     97.08% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::3      1519991      2.70%     99.78% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::4       109062      0.19%     99.98% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::5         3473      0.01%     99.98% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::6        10008      0.02%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::7           71      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::8          114      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::9            4      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::10            1      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::overflows            0      0.00%    100.00% # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::min_value            0                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::max_value           10                       # Number of insts issued each cycle (Count)
board.processor.cores.core.numIssuedDist::total     56218660                       # Number of insts issued each cycle (Count)
board.processor.cores.core.statFuBusy::No_OpClass            0      0.00%      0.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntAlu           13      4.30%      4.30% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntMult            1      0.33%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IntDiv            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatAdd            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCmp            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatCvt            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMult            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMultAcc            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatDiv            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMisc            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatSqrt            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAdd            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAddAcc            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAlu            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCmp            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdCvt            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMisc            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMult            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMultAcc            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdMatMultAcc            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShift            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShiftAcc            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdDiv            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSqrt            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAdd            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatAlu            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCmp            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatCvt            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatDiv            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMisc            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMult            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMultAcc            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatMatMultAcc            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatSqrt            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAdd            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceAlu            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdReduceCmp            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceAdd            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatReduceCmp            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAes            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdAesMix            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha1Hash2            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdSha256Hash2            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma2            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdShaSigma3            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdPredAlu            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::Matrix            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixMov            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MatrixOP            0      0.00%      4.64% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemRead          164     54.30%     58.94% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::MemWrite          121     40.07%     99.01% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemRead            0      0.00%     99.01% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::FloatMemWrite            3      0.99%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::IprAccess            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::InstPrefetch            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideMaskStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdStridedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdIndexedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdWholeRegisterStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdExt            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdFloatExt            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statFuBusy::SimdConfig            0      0.00%    100.00% # attempts to use FU when none available (Count)
board.processor.cores.core.statIssuedInstType_0::No_OpClass           44      0.00%      0.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntAlu     15562740     45.66%     45.66% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntMult      3050182      8.95%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IntDiv           28      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatAdd            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCmp            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatCvt            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMult            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMultAcc            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatDiv            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMisc            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatSqrt            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAdd            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAddAcc            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAlu            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCmp            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdCvt            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMisc            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMult            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMultAcc            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdMatMultAcc            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShift            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShiftAcc            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdDiv            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSqrt            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAdd            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatAlu            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCmp            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatCvt            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatDiv            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMisc            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMult            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMultAcc            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatMatMultAcc            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatSqrt            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAdd            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceAlu            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdReduceCmp            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceAdd            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatReduceCmp            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAes            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdAesMix            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha1Hash2            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdSha256Hash2            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma2            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdShaSigma3            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdPredAlu            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::Matrix            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixMov            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MatrixOP            0      0.00%     54.61% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemRead     13376027     39.25%     93.86% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::MemWrite      2092877      6.14%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemRead            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::FloatMemWrite           12      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::IprAccess            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::InstPrefetch            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideMaskStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdStridedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdIndexedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdWholeRegisterStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdExt            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdFloatExt            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::SimdConfig            0      0.00%    100.00% # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.statIssuedInstType_0::total     34081910                       # Number of instructions issued per FU type, per thread (Count)
board.processor.cores.core.issueRate         0.605931                       # Inst issue rate ((Count/Cycle))
board.processor.cores.core.fuBusy                 302                       # FU busy when requested (Count)
board.processor.cores.core.fuBusyRate        0.000009                       # FU busy rate (busy events/executed inst) ((Count/Count))
board.processor.cores.core.intInstQueueReads    124382782                       # Number of integer instruction queue reads (Count)
board.processor.cores.core.intInstQueueWrites     34212390                       # Number of integer instruction queue writes (Count)
board.processor.cores.core.intInstQueueWakeupAccesses     34060398                       # Number of integer instruction queue wakeup accesses (Count)
board.processor.cores.core.fpInstQueueReads           27                       # Number of floating instruction queue reads (Count)
board.processor.cores.core.fpInstQueueWrites           12                       # Number of floating instruction queue writes (Count)
board.processor.cores.core.fpInstQueueWakeupAccesses           12                       # Number of floating instruction queue wakeup accesses (Count)
board.processor.cores.core.vecInstQueueReads            0                       # Number of vector instruction queue reads (Count)
board.processor.cores.core.vecInstQueueWrites            0                       # Number of vector instruction queue writes (Count)
board.processor.cores.core.vecInstQueueWakeupAccesses            0                       # Number of vector instruction queue wakeup accesses (Count)
board.processor.cores.core.intAluAccesses     34082153                       # Number of integer alu accesses (Count)
board.processor.cores.core.fpAluAccesses           15                       # Number of floating point alu accesses (Count)
board.processor.cores.core.vecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.numSquashedInsts          847                       # Number of squashed instructions skipped in execute (Count)
board.processor.cores.core.numSwp                   0                       # Number of swp insts executed (Count)
board.processor.cores.core.timesIdled             636                       # Number of times that the entire CPU went into an idle state and unscheduled itself (Count)
board.processor.cores.core.idleCycles           28535                       # Total number of cycles that the CPU has spent unscheduled due to idling (Cycle)
board.processor.cores.core.MemDepUnit__0.insertedLoads     13376170                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.insertedStores      2093181                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingLoads      3068088                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__0.conflictingStores      1008945                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__1.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__1.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__2.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__2.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.MemDepUnit__3.insertedLoads            0                       # Number of loads inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.insertedStores            0                       # Number of stores inserted to the mem dependence unit. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingLoads            0                       # Number of conflicting loads. (Count)
board.processor.cores.core.MemDepUnit__3.conflictingStores            0                       # Number of conflicting stores. (Count)
board.processor.cores.core.branchPred.lookups_0::NoBranch            0      0.00%      0.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::Return          565      0.05%      0.05% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallDirect          600      0.06%      0.11% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::CallIndirect           92      0.01%      0.12% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectCond      1056480     98.84%     98.96% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::DirectUncond        11080      1.04%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectCond            0      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::IndirectUncond           36      0.00%    100.00% # Number of BP lookups (Count)
board.processor.cores.core.branchPred.lookups_0::total      1068853                       # Number of BP lookups (Count)
board.processor.cores.core.branchPred.squashes_0::NoBranch            0      0.00%      0.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::Return          400      2.48%      2.48% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallDirect          453      2.81%      5.30% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::CallIndirect           69      0.43%      5.72% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectCond        14476     89.86%     95.59% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::DirectUncond          688      4.27%     99.86% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectCond            0      0.00%     99.86% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::IndirectUncond           23      0.14%    100.00% # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.squashes_0::total        16109                       # Number of branches that got squashed (completely removed) as an earlier branch was mispredicted. (Count)
board.processor.cores.core.branchPred.corrected_0::NoBranch            0      0.00%      0.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::Return            2      0.02%      0.02% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallDirect          148      1.32%      1.34% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::CallIndirect           24      0.21%      1.55% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectCond        10892     97.29%     98.85% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::DirectUncond          113      1.01%     99.86% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectCond            0      0.00%     99.86% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::IndirectUncond           16      0.14%    100.00% # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.corrected_0::total        11195                       # Number of branches that got corrected but not yet commited. Branches get corrected by decode or after execute. Also a branch misprediction can be detected out-of-order. Therefore, a corrected branch might not end up beeing committed in case an even earlier branch was mispredicted (Count)
board.processor.cores.core.branchPred.earlyResteers_0::NoBranch            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::Return            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallDirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::CallIndirect            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::DirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectCond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::IndirectUncond            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.earlyResteers_0::total            0                       # Number of branches that got redirected after decode. (Count)
board.processor.cores.core.branchPred.committed_0::NoBranch            0      0.00%      0.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::Return          165      0.02%      0.02% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallDirect          147      0.01%      0.03% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::CallIndirect           23      0.00%      0.03% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectCond      1042003     98.98%     99.01% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::DirectUncond        10392      0.99%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectCond            0      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::IndirectUncond           13      0.00%    100.00% # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.committed_0::total      1052743                       # Number of branches finally committed  (Count)
board.processor.cores.core.branchPred.mispredicted_0::NoBranch            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::Return            0      0.00%      0.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallDirect           74      0.68%      0.68% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::CallIndirect           23      0.21%      0.89% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectCond        10751     98.45%     99.34% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::DirectUncond           59      0.54%     99.88% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectCond            0      0.00%     99.88% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::IndirectUncond           13      0.12%    100.00% # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.mispredicted_0::total        10920                       # Number of committed branches that were mispredicted. (Count)
board.processor.cores.core.branchPred.targetProvider_0::NoTarget         4253      0.40%      0.40% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::BTB      1064034     99.55%     99.95% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::RAS          565      0.05%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::Indirect            1      0.00%    100.00% # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetProvider_0::total      1068853                       # The component providing the target for taken branches (Count)
board.processor.cores.core.branchPred.targetWrong_0::NoBranch          708      6.32%      6.32% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::Return        10484     93.65%     99.97% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallDirect            2      0.02%     99.99% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::CallIndirect            1      0.01%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::DirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectCond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::IndirectUncond            0      0.00%    100.00% # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.targetWrong_0::total        11195                       # Number of branches where the target was incorrect or not available at prediction time. (Count)
board.processor.cores.core.branchPred.condPredicted      1056480                       # Number of conditional branches predicted (Count)
board.processor.cores.core.branchPred.condPredictedTaken      1053799                       # Number of conditional branches predicted as taken (Count)
board.processor.cores.core.branchPred.condIncorrect        11195                       # Number of conditional branches incorrect (Count)
board.processor.cores.core.branchPred.predTakenBTBMiss          323                       # Number of branches predicted taken but missed in BTB (Count)
board.processor.cores.core.branchPred.NotTakenMispredicted          861                       # Number branches predicted 'not taken' but turned out to be taken (Count)
board.processor.cores.core.branchPred.TakenMispredicted        10334                       # Number branches predicted taken but are actually not taken (Count)
board.processor.cores.core.branchPred.BTBLookups      1068853                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.BTBUpdates          819                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.BTBHits      1064642                       # Number of BTB hits (Count)
board.processor.cores.core.branchPred.BTBHitRatio     0.996060                       # BTB Hit Ratio (Ratio)
board.processor.cores.core.branchPred.BTBMispredicted          499                       # Number BTB mispredictions. No target found or target wrong (Count)
board.processor.cores.core.branchPred.indirectLookups          128                       # Number of indirect predictor lookups. (Count)
board.processor.cores.core.branchPred.indirectHits            1                       # Number of indirect target hits. (Count)
board.processor.cores.core.branchPred.indirectMisses          127                       # Number of indirect misses. (Count)
board.processor.cores.core.branchPred.indirectMispredicted            0                       # Number of mispredicted indirect branches. (Count)
board.processor.cores.core.branchPred.btb.lookups::NoBranch            0      0.00%      0.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::Return          565      0.05%      0.05% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallDirect          600      0.06%      0.11% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::CallIndirect           92      0.01%      0.12% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectCond      1056480     98.84%     98.96% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::DirectUncond        11080      1.04%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectCond            0      0.00%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::IndirectUncond           36      0.00%    100.00% # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.lookups::total      1068853                       # Number of BTB lookups (Count)
board.processor.cores.core.branchPred.btb.misses::NoBranch            0      0.00%      0.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::Return          538     12.78%     12.78% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallDirect          398      9.45%     22.23% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::CallIndirect           92      2.18%     24.41% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectCond         2754     65.40%     89.81% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::DirectUncond          393      9.33%     99.15% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectCond            0      0.00%     99.15% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::IndirectUncond           36      0.85%    100.00% # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.misses::total         4211                       # Number of BTB misses (Count)
board.processor.cores.core.branchPred.btb.updates::NoBranch            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::Return            0      0.00%      0.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallDirect          148     18.07%     18.07% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::CallIndirect            0      0.00%     18.07% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectCond          558     68.13%     86.20% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::DirectUncond          113     13.80%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectCond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::IndirectUncond            0      0.00%    100.00% # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.updates::total          819                       # Number of BTB updates (Count)
board.processor.cores.core.branchPred.btb.mispredict::NoBranch            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::Return            0      0.00%      0.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallDirect          148     18.07%     18.07% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::CallIndirect            0      0.00%     18.07% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectCond          558     68.13%     86.20% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::DirectUncond          113     13.80%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectCond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::IndirectUncond            0      0.00%    100.00% # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.mispredict::total          819                       # Number of BTB mispredictions. No target found or target wrong. (Count)
board.processor.cores.core.branchPred.btb.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.branchPred.indirectBranchPred.lookups          128                       # Number of lookups (Count)
board.processor.cores.core.branchPred.indirectBranchPred.hits            1                       # Number of hits of a tag (Count)
board.processor.cores.core.branchPred.indirectBranchPred.misses          127                       # Number of misses (Count)
board.processor.cores.core.branchPred.indirectBranchPred.targetRecords           40                       # Number of targets that where recorded/installed in the cache (Count)
board.processor.cores.core.branchPred.indirectBranchPred.indirectRecords          168                       # Number of indirect branches/calls recorded in the indirect hist (Count)
board.processor.cores.core.branchPred.indirectBranchPred.speculativeOverflows            1                       # Number of times more than the allowed capacity for speculative branches/calls where in flight and destroy the path history (Count)
board.processor.cores.core.branchPred.ras.pushes         1092                       # Number of times a PC was pushed onto the RAS (Count)
board.processor.cores.core.branchPred.ras.pops         1087                       # Number of times a PC was poped from the RAS (Count)
board.processor.cores.core.branchPred.ras.squashes          922                       # Number of times the stack operation was squashed due to wrong speculation. (Count)
board.processor.cores.core.branchPred.ras.used          165                       # Number of times the RAS is the provider (Count)
board.processor.cores.core.branchPred.ras.correct          165                       # Number of times the RAS is the provider and the prediction is correct (Count)
board.processor.cores.core.branchPred.ras.incorrect            0                       # Number of times the RAS is the provider and the prediction is wrong (Count)
board.processor.cores.core.commit.commitSquashedInsts       128996                       # The number of squashed insts skipped by commit (Count)
board.processor.cores.core.commit.commitNonSpecStalls           83                       # The number of times commit has been forced to stall to communicate backwards (Count)
board.processor.cores.core.commit.branchMispredicts        10868                       # The number of times a branch was mispredicted (Count)
board.processor.cores.core.commit.numCommittedDist::samples     56196960                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::mean     0.604206                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::stdev     1.452882                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::underflows            0      0.00%      0.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::0     36243671     64.49%     64.49% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::1     14775463     26.29%     90.79% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::2      3966790      7.06%     97.85% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::3        63935      0.11%     97.96% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::4        10500      0.02%     97.98% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::5        14608      0.03%     98.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::6        30141      0.05%     98.06% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::7        17400      0.03%     98.09% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::8        33504      0.06%     98.15% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::9        41486      0.07%     98.22% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::10       999462      1.78%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::overflows            0      0.00%    100.00% # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::min_value            0                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::max_value           10                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.numCommittedDist::total     56196960                       # Number of insts commited each cycle (Count)
board.processor.cores.core.commit.amos              0                       # Number of atomic instructions committed (Count)
board.processor.cores.core.commit.membars           30                       # Number of memory barriers committed (Count)
board.processor.cores.core.commit.functionCalls          170                       # Number of function calls committed. (Count)
board.processor.cores.core.commit.committedInstType_0::No_OpClass           30      0.00%      0.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntAlu     15508861     45.68%     45.68% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntMult      3040030      8.95%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IntDiv           26      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatAdd            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCmp            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatCvt            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMult            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMultAcc            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatDiv            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMisc            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatSqrt            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAdd            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAddAcc            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAlu            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCmp            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdCvt            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMisc            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMult            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMultAcc            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdMatMultAcc            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShift            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShiftAcc            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdDiv            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSqrt            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAdd            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatAlu            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCmp            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatCvt            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatDiv            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMisc            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMult            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMultAcc            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatMatMultAcc            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatSqrt            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAdd            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceAlu            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdReduceCmp            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceAdd            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatReduceCmp            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAes            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdAesMix            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha1Hash2            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdSha256Hash2            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma2            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdShaSigma3            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdPredAlu            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::Matrix            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixMov            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MatrixOP            0      0.00%     54.63% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemRead     13313382     39.21%     93.84% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::MemWrite      2092219      6.16%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemRead            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::FloatMemWrite           12      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::IprAccess            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::InstPrefetch            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdStridedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdIndexedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdExt            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdFloatExt            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::SimdConfig            0      0.00%    100.00% # Class of committed instruction (Count)
board.processor.cores.core.commit.committedInstType_0::total     33954560                       # Class of committed instruction (Count)
board.processor.cores.core.commit.commitEligibleSamples       999462                       # number cycles where commit BW limit reached (Cycle)
board.processor.cores.core.commitStats0.numInsts     33954546                       # Number of instructions committed (thread level) (Count)
board.processor.cores.core.commitStats0.numOps     33954560                       # Number of ops (including micro ops) committed (thread level) (Count)
board.processor.cores.core.commitStats0.numInstsNotNOP     33954546                       # Number of instructions committed excluding NOPs or prefetches (Count)
board.processor.cores.core.commitStats0.numOpsNotNOP     33954560                       # Number of Ops (including micro ops) Simulated (Count)
board.processor.cores.core.commitStats0.cpi     1.656544                       # CPI: cycles per instruction (thread level) ((Cycle/Count))
board.processor.cores.core.commitStats0.ipc     0.603666                       # IPC: instructions per cycle (thread level) ((Count/Cycle))
board.processor.cores.core.commitStats0.numMemRefs     15405613                       # Number of memory references committed (Count)
board.processor.cores.core.commitStats0.numFpInsts           12                       # Number of float instructions (Count)
board.processor.cores.core.commitStats0.numIntInsts     33944146                       # Number of integer instructions (Count)
board.processor.cores.core.commitStats0.numLoadInsts     13313357                       # Number of load instructions (Count)
board.processor.cores.core.commitStats0.numStoreInsts      2092231                       # Number of store instructions (Count)
board.processor.cores.core.commitStats0.numVecInsts            0                       # Number of vector instructions (Count)
board.processor.cores.core.commitStats0.committedInstType::No_OpClass           30      0.00%      0.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntAlu     15508861     45.68%     45.68% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntMult      3040030      8.95%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IntDiv           26      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatAdd            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCmp            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatCvt            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMult            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMultAcc            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatDiv            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMisc            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatSqrt            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAdd            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAddAcc            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAlu            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCmp            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdCvt            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMisc            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMult            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMultAcc            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdMatMultAcc            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShift            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShiftAcc            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdDiv            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSqrt            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAdd            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatAlu            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCmp            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatCvt            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatDiv            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMisc            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMult            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMultAcc            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatMatMultAcc            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatSqrt            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAdd            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceAlu            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdReduceCmp            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceAdd            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatReduceCmp            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAes            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdAesMix            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha1Hash2            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdSha256Hash2            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma2            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdShaSigma3            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdPredAlu            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::Matrix            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixMov            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MatrixOP            0      0.00%     54.63% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemRead     13313382     39.21%     93.84% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::MemWrite      2092219      6.16%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemRead            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::FloatMemWrite           12      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::IprAccess            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::InstPrefetch            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideMaskStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdStridedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdIndexedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdWholeRegisterStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideFaultOnlyFirstLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedLoad            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdUnitStrideSegmentedStore            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdExt            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdFloatExt            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::SimdConfig            0      0.00%    100.00% # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedInstType::total     33954560                       # Class of committed instruction. (Count)
board.processor.cores.core.commitStats0.committedControl::IsControl      1052743                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsDirectControl      1052542                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsIndirectControl          201                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCondControl      1042003                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsUncondControl        10740                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsCall          170                       # Class of control type instructions committed (Count)
board.processor.cores.core.commitStats0.committedControl::IsReturn          165                       # Class of control type instructions committed (Count)
board.processor.cores.core.decode.idleCycles      1068490                       # Number of cycles decode is idle (Cycle)
board.processor.cores.core.decode.blockedCycles     51708896                       # Number of cycles decode is blocked (Cycle)
board.processor.cores.core.decode.runCycles       568702                       # Number of cycles decode is running (Cycle)
board.processor.cores.core.decode.unblockCycles      2861587                       # Number of cycles decode is unblocking (Cycle)
board.processor.cores.core.decode.squashCycles        10985                       # Number of cycles decode is squashing (Cycle)
board.processor.cores.core.decode.branchResolved      1052546                       # Number of times decode resolved a branch (Count)
board.processor.cores.core.decode.branchMispred          333                       # Number of times decode detected a branch misprediction (Count)
board.processor.cores.core.decode.decodedInsts     34178857                       # Number of instructions handled by decode (Count)
board.processor.cores.core.decode.squashedInsts         1287                       # Number of squashed instructions handled by decode (Count)
board.processor.cores.core.executeStats0.numInsts     34081063                       # Number of executed instructions (Count)
board.processor.cores.core.executeStats0.numNop            0                       # Number of nop insts executed (Count)
board.processor.cores.core.executeStats0.numBranches      1053582                       # Number of branches executed (Count)
board.processor.cores.core.executeStats0.numLoadInsts     13375709                       # Number of load instructions executed (Count)
board.processor.cores.core.executeStats0.numStoreInsts      2092836                       # Number of stores executed (Count)
board.processor.cores.core.executeStats0.instRate     0.605916                       # Inst execution rate ((Count/Cycle))
board.processor.cores.core.executeStats0.numFpRegReads           12                       # Number of times the floating registers were read (Count)
board.processor.cores.core.executeStats0.numFpRegWrites            0                       # Number of times the floating registers were written (Count)
board.processor.cores.core.executeStats0.numIntRegReads     45373918                       # Number of times the integer registers were read (Count)
board.processor.cores.core.executeStats0.numIntRegWrites     30914328                       # Number of times the integer registers were written (Count)
board.processor.cores.core.executeStats0.numMemRefs     15468545                       # Number of memory refs (Count)
board.processor.cores.core.executeStats0.numMiscRegReads           26                       # Number of times the Misc registers were read (Count)
board.processor.cores.core.executeStats0.numVecAluAccesses            0                       # Number of vector alu accesses (Count)
board.processor.cores.core.executeStats0.numDiscardedOps            0                       # Number of ops (including micro ops) which were discarded before commit (Count)
board.processor.cores.core.fetch.predictedBranches      1064600                       # Number of branches that fetch has predicted taken (Count)
board.processor.cores.core.fetch.cycles      56189103                       # Number of cycles fetch has run and was not squashing or blocked (Cycle)
board.processor.cores.core.fetch.squashCycles        22624                       # Number of cycles fetch has spent squashing (Cycle)
board.processor.cores.core.fetch.cacheLines      2127921                       # Number of cache lines fetched (Count)
board.processor.cores.core.fetch.icacheSquashes          484                       # Number of outstanding Icache misses that were squashed (Count)
board.processor.cores.core.fetch.nisnDist::samples     56218660                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::mean     0.616065                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::stdev     2.164831                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::underflows            0      0.00%      0.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::0     51134159     90.96%     90.96% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::1       334897      0.60%     91.55% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::2       334271      0.59%     92.15% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::3       321314      0.57%     92.72% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::4       323938      0.58%     93.29% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::5       325451      0.58%     93.87% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::6       630118      1.12%     94.99% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::7       699768      1.24%     96.24% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::8        21944      0.04%     96.28% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::9        38682      0.07%     96.35% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::10      2054118      3.65%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::overflows            0      0.00%    100.00% # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::min_value            0                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::max_value           10                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetch.nisnDist::total     56218660                       # Number of instructions fetched each cycle (Total) (Count)
board.processor.cores.core.fetchStats0.numInsts     34634306                       # Number of instructions fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.numOps            0                       # Number of ops (including micro ops) fetched (thread level) (Count)
board.processor.cores.core.fetchStats0.fetchRate     0.615752                       # Number of inst fetches per cycle ((Count/Cycle))
board.processor.cores.core.fetchStats0.numBranches      1068853                       # Number of branches fetched (Count)
board.processor.cores.core.fetchStats0.branchRate     0.019003                       # Number of branch fetches per cycle (Ratio)
board.processor.cores.core.fetchStats0.icacheStallCycles        18245                       # ICache total stall cycles (Cycle)
board.processor.cores.core.fetchStats0.numFetchSuspends            0                       # Number of times Execute suspended instruction fetching (Count)
board.processor.cores.core.iew.idleCycles            0                       # Number of cycles IEW is idle (Cycle)
board.processor.cores.core.iew.squashCycles        10985                       # Number of cycles IEW is squashing (Cycle)
board.processor.cores.core.iew.blockCycles        10715                       # Number of cycles IEW is blocking (Cycle)
board.processor.cores.core.iew.unblockCycles      1427277                       # Number of cycles IEW is unblocking (Cycle)
board.processor.cores.core.iew.dispatchedInsts     34083427                       # Number of instructions dispatched to IQ (Count)
board.processor.cores.core.iew.dispSquashedInsts          408                       # Number of squashed instructions skipped by dispatch (Count)
board.processor.cores.core.iew.dispLoadInsts     13376170                       # Number of dispatched load instructions (Count)
board.processor.cores.core.iew.dispStoreInsts      2093181                       # Number of dispatched store instructions (Count)
board.processor.cores.core.iew.dispNonSpecInsts           82                       # Number of dispatched non-speculative instructions (Count)
board.processor.cores.core.iew.iqFullEvents            0                       # Number of times the IQ has become full, causing a stall (Count)
board.processor.cores.core.iew.lsqFullEvents            0                       # Number of times the LSQ has become full, causing a stall (Count)
board.processor.cores.core.iew.memOrderViolationEvents          115                       # Number of memory order violations (Count)
board.processor.cores.core.iew.predictedTakenIncorrect        10422                       # Number of branches that were predicted taken incorrectly (Count)
board.processor.cores.core.iew.predictedNotTakenIncorrect          522                       # Number of branches that were predicted not taken incorrectly (Count)
board.processor.cores.core.iew.branchMispredicts        10944                       # Number of branch mispredicts detected at execute (Count)
board.processor.cores.core.iew.instsToCommit     34060524                       # Cumulative count of insts sent to commit (Count)
board.processor.cores.core.iew.writebackCount     34060410                       # Cumulative count of insts written-back (Count)
board.processor.cores.core.iew.producerInst     24712636                       # Number of instructions producing a value (Count)
board.processor.cores.core.iew.consumerInst     24724963                       # Number of instructions consuming a value (Count)
board.processor.cores.core.iew.wbRate        0.605549                       # Insts written-back per cycle ((Count/Cycle))
board.processor.cores.core.iew.wbFanout      0.999501                       # Average fanout of values written-back ((Count/Count))
board.processor.cores.core.lsq0.forwLoads      2061269                       # Number of loads that had data forwarded from stores (Count)
board.processor.cores.core.lsq0.squashedLoads        62813                       # Number of loads squashed (Count)
board.processor.cores.core.lsq0.ignoredResponses           32                       # Number of memory responses ignored because the instruction is squashed (Count)
board.processor.cores.core.lsq0.memOrderViolation          115                       # Number of memory ordering violations (Count)
board.processor.cores.core.lsq0.squashedStores          925                       # Number of stores squashed (Count)
board.processor.cores.core.lsq0.rescheduledLoads            2                       # Number of loads that were rescheduled (Count)
board.processor.cores.core.lsq0.blockedByCache            0                       # Number of times an access to memory failed due to the cache being blocked (Count)
board.processor.cores.core.lsq0.loadToUse::samples     13313357                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::mean     4.329368                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::stdev    18.594996                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::0-9     13015353     97.76%     97.76% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::10-19         5810      0.04%     97.81% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::20-29          122      0.00%     97.81% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::30-39          565      0.00%     97.81% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::40-49          805      0.01%     97.82% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::50-59           18      0.00%     97.82% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::60-69          253      0.00%     97.82% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::70-79           20      0.00%     97.82% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::80-89       223270      1.68%     99.50% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::90-99        10403      0.08%     99.57% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::100-109         7147      0.05%     99.63% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::110-119        34653      0.26%     99.89% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::120-129         5550      0.04%     99.93% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::130-139         1672      0.01%     99.94% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::140-149         1326      0.01%     99.95% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::150-159         1314      0.01%     99.96% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::160-169          551      0.00%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::170-179          254      0.00%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::180-189          234      0.00%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::190-199           12      0.00%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::200-209           82      0.00%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::210-219           87      0.00%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::220-229            7      0.00%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::230-239            2      0.00%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::240-249            1      0.00%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::250-259            4      0.00%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::270-279            1      0.00%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::280-289            2      0.00%     99.97% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::overflows         3839      0.03%    100.00% # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::min_value            2                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::max_value          955                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.lsq0.loadToUse::total     13313357                       # Distribution of cycle latency between the first time a load is issued and its completion (Unspecified)
board.processor.cores.core.mmu.dtb.readHits            0                       # read hits (Count)
board.processor.cores.core.mmu.dtb.readMisses            0                       # read misses (Count)
board.processor.cores.core.mmu.dtb.readAccesses            0                       # read accesses (Count)
board.processor.cores.core.mmu.dtb.writeHits            0                       # write hits (Count)
board.processor.cores.core.mmu.dtb.writeMisses            0                       # write misses (Count)
board.processor.cores.core.mmu.dtb.writeAccesses            0                       # write accesses (Count)
board.processor.cores.core.mmu.dtb.hits             0                       # Total TLB (read and write) hits (Count)
board.processor.cores.core.mmu.dtb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores.core.mmu.dtb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores.core.mmu.dtb.walker.num_4kb_walks            0                       # Completed page walks with 4KB pages (Count)
board.processor.cores.core.mmu.dtb.walker.num_2mb_walks            0                       # Completed page walks with 2MB pages (Count)
board.processor.cores.core.mmu.dtb.walker.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.mmu.itb.readHits            0                       # read hits (Count)
board.processor.cores.core.mmu.itb.readMisses            0                       # read misses (Count)
board.processor.cores.core.mmu.itb.readAccesses            0                       # read accesses (Count)
board.processor.cores.core.mmu.itb.writeHits            0                       # write hits (Count)
board.processor.cores.core.mmu.itb.writeMisses            0                       # write misses (Count)
board.processor.cores.core.mmu.itb.writeAccesses            0                       # write accesses (Count)
board.processor.cores.core.mmu.itb.hits             0                       # Total TLB (read and write) hits (Count)
board.processor.cores.core.mmu.itb.misses            0                       # Total TLB (read and write) misses (Count)
board.processor.cores.core.mmu.itb.accesses            0                       # Total TLB (read and write) accesses (Count)
board.processor.cores.core.mmu.itb.walker.num_4kb_walks            0                       # Completed page walks with 4KB pages (Count)
board.processor.cores.core.mmu.itb.walker.num_2mb_walks            0                       # Completed page walks with 2MB pages (Count)
board.processor.cores.core.mmu.itb.walker.power_state.pwrStateResidencyTicks::UNDEFINED  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.power_state.pwrStateResidencyTicks::ON  28123597000                       # Cumulative time (in ticks) in various power states (Tick)
board.processor.cores.core.rename.squashCycles        10985                       # Number of cycles rename is squashing (Cycle)
board.processor.cores.core.rename.idleCycles      2096889                       # Number of cycles rename is idle (Cycle)
board.processor.cores.core.rename.blockCycles      1438890                       # Number of cycles rename is blocking (Cycle)
board.processor.cores.core.rename.serializeStallCycles         3629                       # count of cycles rename stalled for serializing inst (Cycle)
board.processor.cores.core.rename.runCycles      2290733                       # Number of cycles rename is running (Cycle)
board.processor.cores.core.rename.unblockCycles     50377534                       # Number of cycles rename is unblocking (Cycle)
board.processor.cores.core.rename.renamedInsts     34095395                       # Number of instructions processed by rename (Count)
board.processor.cores.core.rename.ROBFullEvents        12361                       # Number of times rename has blocked due to ROB full (Count)
board.processor.cores.core.rename.SQFullEvents           22                       # Number of times rename has blocked due to SQ full (Count)
board.processor.cores.core.rename.fullRegistersEvents     50227384                       # Number of times there has been no free registers (Count)
board.processor.cores.core.rename.renamedOperands     30947972                       # Number of destination operands rename has renamed (Count)
board.processor.cores.core.rename.lookups     45410993                       # Number of register rename lookups that rename has made (Count)
board.processor.cores.core.rename.intLookups     45389685                       # Number of integer rename lookups (Count)
board.processor.cores.core.rename.fpLookups           12                       # Number of floating rename lookups (Count)
board.processor.cores.core.rename.committedMaps     30809748                       # Number of HB maps that are committed (Count)
board.processor.cores.core.rename.undoneMaps       138224                       # Number of HB maps that are undone due to squashing (Count)
board.processor.cores.core.rename.serializing           45                       # count of serializing insts renamed (Count)
board.processor.cores.core.rename.tempSerializing           45                       # count of temporary serializing insts renamed (Count)
board.processor.cores.core.rename.skidInsts     22457594                       # count of insts added to the skid buffer (Count)
board.processor.cores.core.rob.reads         89280820                       # The number of ROB reads (Count)
board.processor.cores.core.rob.writes        68188821                       # The number of ROB writes (Count)
board.processor.cores.core.thread_0.numInsts     33954546                       # Number of Instructions committed (Count)
board.processor.cores.core.thread_0.numOps     33954560                       # Number of Ops committed (Count)
board.processor.cores.core.thread_0.numMemRefs            0                       # Number of Memory References (Count)
board.processor.cores.core.workload.numSyscalls           14                       # Number of system calls (Count)
board.workload.inst.arm                             0                       # number of arm instructions executed (Count)
board.workload.inst.quiesce                         0                       # number of quiesce instructions executed (Count)

---------- End Simulation Statistics   ----------
